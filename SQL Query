Q1. Who is the senior most employee based on job title?

select * from employee
order by levels desc
limit 1;

Q2.Which country have the most invoices?

select 
    count(*), billing_country
from
    invoice
group by billing_country
order by billing_country desc;

Q3.What are top 3 values of total invoice?

select 
    total
from
    invoice
order by total desc
limit 3

Q4.Which city has the best custfomers? We would like to throw a promotional Music Festival in the city we made the most money.Write a query that returns one city that has 
the highest sum of invoice totals. Return both the city name& sum of all invoice totals.

select 
    SUM(total) as invoice_total, billing_city
from
    invoice
group by billing_city

Q5.Who is the best customer? The customer who has spent the most money will be declared the best customer. Write a query that returns the person
who has spent the most money.

select 
    customer.customer_id,
    customer.first_name,
    customer.last_name,
    sum(invoice.total) as total
from
    customer
        join
    invoice ON customer.customer_id = invoice.customer_id
group by customer.customer_id , customer.first_name , customer.last_name
order by total desc
limit 1;

Q6.Write query to return the email, first name & genre of all Rock music listeners. Return your list ordered alphabetically by email starting with A.

select distinct
    email, first_name, last_name
from
    customer
        join
    invoice ON customer.customer_id = invoice.customer_id
        join
    invoice_line ON invoice.invoice_id = invoice_line.invoice_id
where
    track_id in (select 
            track_id
        from
            track
                join
            genre ON track.genre_id = genre.genre_id
        where
            genre.name like 'Rock')
order by email;

Q7.Lets invite the artist who have written the most rock music in our dataset. write a query that returns the Artist name and total artist track of the 
top 10 rock bands.

select 
    artist.artist_id,
    artist.name,
    count(artist.artist_id) as number_of_songs
from
    artist
        join
    album ON artist.artist_id = album.artist_id
        join
    track ON album.album_id = track.track_id
        join
    genre ON track.genre_id = genre.genre_id
where
    genre.name like 'Rock'
group by artist.artist_id , artist.name
order by number_of_songs desc
limit 10;

Q8.Return all the track names that have a song length longer than the average song lenghth. Return the Name ane Milliseconds for each track. Order by 
the song length with the longest songs listed first.

select 
    name, milliseconds
from
    track
where
    milliseconds > (select 
            avg(milliseconds) as avg_track_length
        from
            track)
order by milliseconds desc
limit 5;

Q9.Find how much amount spent by each customer on artists? Write a query to return customer name, artist name and total spent.

with best_selling_artist as (
select artist.artist_id,artist.name as artist_name, sum(invoice_line.unit_price*invoice_line.quantity) as total_sales
from invoice_line
       join 
    track on invoice_line.track_id=track.track_id
       join 
    album on track.album_id=album.album_id
       join 
    artist on album.artist_id=artist.artist_id
group by 1,2
order by 3 desc
limit 1
)
select customer.customer_id,customer.first_name,customer.last_name,best_selling_artist.artist_name,
sum(invoice_line.unit_price*invoice_line.quantity) as amount_spent
from customer
       join 
    invoice on customer.customer_id=invoice.customer_id
       join 
    invoice_line on invoice.invoice_id=invoice_line.invoice_id
       join 
    track on invoice_line.track_id=track.track_id
       join 
    album on track.album_id=album.album_id
join best_selling_artist on album.artist_id=best_selling_artist.artist_id
group by 1,2,3,4
order by 5 desc;

Q10. We want to find out the most popular music genre for each country.We determine the most popular genre as the genre with  the highest amount id purchases.
Write a query that returns each country along with the top genre.For countries where the maximum number of purchases is shared return all genres.

With popular_genre as (
select  customer.country,genre.name,genre.genre_id,count(invoice_line.quantity) as purchases,
row_number() over (partition by customer.country order by count(invoice_line.quantity) desc) as RowNo
from customer
       join 
    invoice on invoice.customer_id=customer.customer_id
       join 
    invoice_line on invoice.invoice_id=invoice_line.invoice_id
       join 
    track on invoice_line.track_id=track.track_id
       join  
    genre on track.genre_id=genre.genre_id
group by 1,2,3
order by 1, 4 desc
)
select * from popular_genre where RowNo <= 1;










